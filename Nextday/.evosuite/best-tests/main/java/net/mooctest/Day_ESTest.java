/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 24 13:29:14 GMT 2018
 */

package main.java.net.mooctest;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import main.java.net.mooctest.Day;
import main.java.net.mooctest.Month;
import main.java.net.mooctest.Year;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Day_ESTest extends Day_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Year year0 = new Year(9);
      Month month0 = new Month(9, year0);
      Day day0 = new Day(9, month0);
      day0.increment();
      Day day1 = new Day(9, month0);
      boolean boolean0 = day1.equals(day0);
      assertEquals(10, day0.getDay());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Year year0 = new Year(2);
      Month month0 = new Month(2, year0);
      Day day0 = new Day(28, month0);
      assertEquals(28, day0.getDay());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Year year0 = new Year(2);
      Month month0 = new Month(2, year0);
      year0.increment();
      year0.increment();
      Day day0 = new Day(28, month0);
      boolean boolean0 = day0.increment();
      assertEquals(29, day0.getDay());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Year year0 = new Year(4);
      Month month0 = new Month(4, year0);
      Day day0 = new Day(4, month0);
      day0.setCurrentPos(0);
      int int0 = day0.getDay();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Year year0 = new Year((-718));
      Month month0 = new Month(2, year0);
      Day day0 = new Day(1, month0);
      day0.currentPos = (-572);
      int int0 = day0.getDay();
      assertEquals((-572), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Year year0 = new Year((-906));
      Month month0 = new Month(1, year0);
      Day day0 = new Day(1, month0);
      month0.currentPos = (-906);
      // Undeclared exception!
      try { 
        day0.increment();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -907
         //
         verifyException("main.java.net.mooctest.Month", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Year year0 = new Year(5);
      Month month0 = new Month(5, year0);
      Day day0 = new Day(5, month0);
      day0.isValid();
      assertEquals(5, day0.getDay());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Year year0 = new Year(1593);
      Month month0 = new Month(10, year0);
      Day day0 = new Day(10, month0);
      // Undeclared exception!
      try { 
        day0.setDay(1593, month0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Not a valid day
         //
         verifyException("main.java.net.mooctest.Day", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Year year0 = new Year((-1350));
      Month month0 = new Month(1, year0);
      Day day0 = new Day(1, month0);
      day0.setDay(1, month0);
      assertEquals(1, day0.getDay());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Year year0 = new Year(6);
      Month month0 = new Month(6, year0);
      month0.increment();
      Day day0 = new Day(6, month0);
      Month month1 = new Month(6, year0);
      Day day1 = new Day(6, month1);
      boolean boolean0 = day0.equals(day1);
      assertEquals(6, day1.getDay());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Year year0 = new Year(9);
      Month month0 = new Month(9, year0);
      Day day0 = new Day(9, month0);
      boolean boolean0 = day0.equals(day0);
      assertEquals(9, day0.getDay());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Year year0 = new Year(1090);
      Month month0 = new Month(8, year0);
      Day day0 = new Day(8, month0);
      boolean boolean0 = day0.equals(month0);
      assertEquals(8, day0.getDay());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Year year0 = new Year(1090);
      Month month0 = new Month(8, year0);
      Day day0 = new Day(8, month0);
      assertEquals(8, day0.getDay());
      
      day0.setCurrentPos(1090);
      boolean boolean0 = day0.isValid();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Year year0 = new Year((-718));
      Month month0 = new Month(2, year0);
      Day day0 = new Day(1, month0);
      assertEquals(1, day0.getDay());
      
      day0.currentPos = (-572);
      boolean boolean0 = day0.isValid();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Year year0 = new Year(1090);
      Month month0 = new Month(8, year0);
      Day day0 = new Day(8, month0);
      year0.currentPos = 0;
      boolean boolean0 = day0.isValid();
      assertEquals(8, day0.getDay());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Year year0 = new Year(9);
      Month month0 = new Month(9, year0);
      Day day0 = new Day(9, month0);
      day0.increment();
      Day day1 = new Day(9, month0);
      boolean boolean0 = day0.equals(day1);
      assertEquals(10, day0.getDay());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Year year0 = new Year(1090);
      Month month0 = new Month(8, year0);
      Day day0 = new Day(8, month0);
      day0.setCurrentPos(1090);
      boolean boolean0 = day0.increment();
      assertEquals(1091, day0.getDay());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Year year0 = new Year(1090);
      Month month0 = new Month(8, year0);
      Day day0 = new Day(8, month0);
      int int0 = day0.getDay();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Day day0 = null;
      try {
        day0 = new Day(60, (Month) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Not a valid day
         //
         verifyException("main.java.net.mooctest.Day", e);
      }
  }
}
