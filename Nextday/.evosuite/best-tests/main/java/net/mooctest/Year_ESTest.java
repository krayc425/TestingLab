/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 24 13:24:39 GMT 2018
 */

package main.java.net.mooctest;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import main.java.net.mooctest.Year;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Year_ESTest extends Year_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Year year0 = new Year((-57));
      assertEquals((-57), year0.getYear());
      
      Year year1 = new Year((-57));
      year0.setCurrentPos(0);
      boolean boolean0 = year0.equals(year1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Year year0 = new Year((-1281));
      assertEquals((-1281), year0.getYear());
      
      year0.setCurrentPos(0);
      boolean boolean0 = year0.isLeap();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Year year0 = new Year((-624));
      boolean boolean0 = year0.increment();
      assertEquals((-623), year0.getYear());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Year year0 = new Year((-57));
      year0.isValid();
      assertTrue(year0.isLeap());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Year year0 = new Year((-57));
      assertEquals((-57), year0.getYear());
      
      year0.setCurrentPos(0);
      boolean boolean0 = year0.isValid();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Year year0 = new Year((-57));
      year0.setCurrentPos(0);
      int int0 = year0.getYear();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Year year0 = new Year(2316);
      int int0 = year0.getYear();
      assertEquals(2316, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Year year0 = new Year((-921));
      year0.setYear((-921));
      assertTrue(year0.isLeap());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Year year0 = new Year(742);
      // Undeclared exception!
      try { 
        year0.setYear(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Not a valid month
         //
         verifyException("main.java.net.mooctest.Year", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Year year0 = new Year((-2485));
      Year year1 = new Year(45);
      boolean boolean0 = year0.equals(year1);
      assertFalse(year1.equals((Object)year0));
      assertEquals(45, year1.getYear());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Year year0 = new Year((-2485));
      boolean boolean0 = year0.equals(year0);
      assertTrue(boolean0);
      assertEquals((-2485), year0.getYear());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Year year0 = new Year(1308);
      boolean boolean0 = year0.equals("main.java.net.mooctes.CalendarUnit");
      assertFalse(boolean0);
      assertEquals(1308, year0.getYear());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Year year0 = new Year((-921));
      boolean boolean0 = year0.isLeap();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Year year0 = new Year((-1782));
      boolean boolean0 = year0.isLeap();
      assertFalse(boolean0);
      assertEquals((-1782), year0.getYear());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Year year0 = new Year(1600);
      boolean boolean0 = year0.isLeap();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Year year0 = new Year(1308);
      boolean boolean0 = year0.isLeap();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Year year0 = new Year((-1));
      boolean boolean0 = year0.isLeap();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Year year0 = new Year(1308);
      year0.increment();
      boolean boolean0 = year0.isLeap();
      assertEquals(1309, year0.getYear());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Year year0 = null;
      try {
        year0 = new Year(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Not a valid month
         //
         verifyException("main.java.net.mooctest.Year", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Year year0 = new Year((-921));
      int int0 = year0.getYear();
      assertEquals((-921), int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Year year0 = new Year((-1));
      boolean boolean0 = year0.increment();
      assertEquals(1, year0.getYear());
      assertTrue(boolean0);
  }
}
